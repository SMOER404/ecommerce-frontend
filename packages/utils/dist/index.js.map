{"version":3,"sources":["../src/classNames.ts","../src/format.ts","../src/validation.ts"],"names":["twMerge","clsx"],"mappings":";;;;;;AAGa,IAAA,EAAA,GAAK,IAAI,MAAyB,KAAA;AAC7C,EAAO,OAAAA,qBAAA,CAAQC,SAAK,CAAA,MAAM,CAAC,CAAA;AAC7B;;;ACLa,IAAA,WAAA,GAAc,CAAC,KAA0B,KAAA;AACpD,EAAO,OAAA,IAAI,IAAK,CAAA,YAAA,CAAa,OAAS,EAAA;AAAA,IACpC,KAAO,EAAA,UAAA;AAAA,IACP,QAAU,EAAA;AAAA,GACX,CAAE,CAAA,MAAA,CAAO,KAAK,CAAA;AACjB;AAEa,IAAA,UAAA,GAAa,CAAC,IAAuB,KAAA;AAChD,EAAO,OAAA,IAAI,IAAK,CAAA,cAAA,CAAe,OAAS,EAAA;AAAA,IACtC,IAAM,EAAA,SAAA;AAAA,IACN,KAAO,EAAA,MAAA;AAAA,IACP,GAAK,EAAA;AAAA,GACN,CAAE,CAAA,MAAA,CAAO,IAAI,CAAA;AAChB;;;ACba,IAAA,YAAA,GAAe,CAAC,KAA2B,KAAA;AACtD,EAAA,MAAM,UAAa,GAAA,4BAAA;AACnB,EAAO,OAAA,UAAA,CAAW,KAAK,KAAK,CAAA;AAC9B;AAEa,IAAA,eAAA,GAAkB,CAAC,QAA8B,KAAA;AAC5D,EAAA,OAAO,SAAS,MAAU,IAAA,CAAA;AAC5B;AAEa,IAAA,YAAA,GAAe,CAAC,KAA2B,KAAA;AACtD,EAAA,MAAM,UAAa,GAAA,qBAAA;AACnB,EAAO,OAAA,UAAA,CAAW,KAAK,KAAK,CAAA;AAC9B","file":"index.js","sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport const cn = (...inputs: ClassValue[]) => {\r\n  return twMerge(clsx(inputs));\r\n}; ","export const formatPrice = (price: number): string => {\r\n  return new Intl.NumberFormat('ru-RU', {\r\n    style: 'currency',\r\n    currency: 'RUB'\r\n  }).format(price);\r\n};\r\n\r\nexport const formatDate = (date: Date): string => {\r\n  return new Intl.DateTimeFormat('ru-RU', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  }).format(date);\r\n}; ","export const isValidEmail = (email: string): boolean => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const isValidPassword = (password: string): boolean => {\r\n  return password.length >= 8;\r\n};\r\n\r\nexport const isValidPhone = (phone: string): boolean => {\r\n  const phoneRegex = /^\\+?[1-9]\\d{10,14}$/;\r\n  return phoneRegex.test(phone);\r\n}; "]}