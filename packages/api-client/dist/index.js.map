{"version":3,"sources":["../src/config.ts","../src/api.ts","../src/index.ts"],"names":["axios"],"mappings":"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","file":"index.js","sourcesContent":["export const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL\n  ? `${process.env.NEXT_PUBLIC_API_URL}/api`\n  : 'http://localhost:3001/api';\n\nexport const API_ENDPOINTS = {\n  products: `${API_BASE_URL}/products`,\n  categories: `${API_BASE_URL}/categories`,\n  brands: `${API_BASE_URL}/brands`,\n  orders: `${API_BASE_URL}/orders`,\n  users: `${API_BASE_URL}/users`,\n} as const;\n","import { apiClient } from './index';\nimport type { Product, Category, Brand, Order, User } from './types';\nimport { API_ENDPOINTS } from './config';\n\ninterface PaginatedResponse<T> {\n  data: T[];\n  total: number;\n  page: number;\n  limit: number;\n}\n\n// Products\nexport const getProducts = async (page = 1, limit = 10) => {\n  const { data } = await apiClient.get<PaginatedResponse<Product>>(API_ENDPOINTS.products, {\n    params: { page, limit },\n  });\n  return data;\n};\n\nexport const getProductById = async (id: string) => {\n  const { data } = await apiClient.get<Product>(`${API_ENDPOINTS.products}/${id}`);\n  return data;\n};\n\n// Categories\nexport const getCategories = async () => {\n  const { data } = await apiClient.get<Category[]>(API_ENDPOINTS.categories);\n  return data;\n};\n\nexport const getCategoryById = async (id: string) => {\n  const { data } = await apiClient.get<Category>(`${API_ENDPOINTS.categories}/${id}`);\n  return data;\n};\n\n// Brands\nexport const getBrands = async () => {\n  const { data } = await apiClient.get<PaginatedResponse<Brand>>(API_ENDPOINTS.brands);\n  return data.data;\n};\n\nexport const getBrandById = async (id: string) => {\n  const { data } = await apiClient.get<Brand>(`${API_ENDPOINTS.brands}/${id}`);\n  return data;\n};\n\nexport const uploadBrandImage = async (id: string, imageUrl: string) => {\n  const { data } = await apiClient.put<Brand>(`${API_ENDPOINTS.brands}/${id}/image`, {\n    imageUrl,\n  });\n  return data;\n};\n\n// Orders\nexport const getOrders = async (page = 1, limit = 10) => {\n  const { data } = await apiClient.get<PaginatedResponse<Order>>(API_ENDPOINTS.orders, {\n    params: { page, limit },\n  });\n  return data;\n};\n\nexport const getOrderById = async (id: string) => {\n  const { data } = await apiClient.get<Order>(`${API_ENDPOINTS.orders}/${id}`);\n  return data;\n};\n\n// Users\nexport const getUsers = async (page = 1, limit = 10) => {\n  const { data } = await apiClient.get<PaginatedResponse<User>>(API_ENDPOINTS.users, {\n    params: { page, limit },\n  });\n  return data;\n};\n\nexport const getUserById = async (id: string) => {\n  const { data } = await apiClient.get<User>(`${API_ENDPOINTS.users}/${id}`);\n  return data;\n};\n","import axios from 'axios';\n\nexport const apiClient = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3001',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Добавляем перехватчик для обработки ошибок\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error);\n    return Promise.reject(error);\n  },\n);\n\nexport * from './api';\nexport * from './types';\nexport * from './config';\n"]}