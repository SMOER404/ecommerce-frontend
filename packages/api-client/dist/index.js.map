{"version":3,"sources":["../src/config.ts","../src/api.ts"],"names":["axios"],"mappings":";;;;;;;;;;;AAAa,IAAA,YAAA,GAAe,OAAQ,CAAA,GAAA,CAAI,mBAAuB,IAAA;AAExD,IAAM,aAAgB,GAAA;AAAA,EAC3B,QAAA,EAAU,GAAG,YAAY,CAAA,SAAA,CAAA;AAAA,EACzB,UAAA,EAAY,GAAG,YAAY,CAAA,WAAA,CAAA;AAAA,EAC3B,MAAA,EAAQ,GAAG,YAAY,CAAA,OAAA,CAAA;AAAA,EACvB,MAAA,EAAQ,GAAG,YAAY,CAAA,OAAA,CAAA;AAAA,EACvB,KAAA,EAAO,GAAG,YAAY,CAAA,MAAA;AACxB;;;ACJA,IAAM,GAAA,GAAMA,uBAAM,MAAO,CAAA;AAAA,EACvB,OAAS,EAAA,YAAA;AAAA,EACT,OAAS,EAAA;AAAA,IACP,cAAgB,EAAA;AAAA;AAEpB,CAAC,CAAA;AAGM,IAAM,cAAc,YAAY;AACrC,EAAA,MAAM,EAAE,IAAK,EAAA,GAAI,MAAM,GAAA,CAAI,IAAe,WAAW,CAAA;AACrD,EAAO,OAAA,IAAA;AACT;AAEa,IAAA,cAAA,GAAiB,OAAO,EAAe,KAAA;AAClD,EAAM,MAAA,EAAE,MAAS,GAAA,MAAM,IAAI,GAAa,CAAA,CAAA,UAAA,EAAa,EAAE,CAAE,CAAA,CAAA;AACzD,EAAO,OAAA,IAAA;AACT;AAGO,IAAM,gBAAgB,YAAY;AACvC,EAAA,MAAM,EAAE,IAAK,EAAA,GAAI,MAAM,GAAA,CAAI,IAAgB,aAAa,CAAA;AACxD,EAAO,OAAA,IAAA;AACT;AAEa,IAAA,eAAA,GAAkB,OAAO,EAAe,KAAA;AACnD,EAAM,MAAA,EAAE,MAAS,GAAA,MAAM,IAAI,GAAc,CAAA,CAAA,YAAA,EAAe,EAAE,CAAE,CAAA,CAAA;AAC5D,EAAO,OAAA,IAAA;AACT;AAGO,IAAM,YAAY,YAAY;AACnC,EAAA,MAAM,EAAE,IAAK,EAAA,GAAI,MAAM,GAAA,CAAI,IAAa,SAAS,CAAA;AACjD,EAAO,OAAA,IAAA;AACT;AAEa,IAAA,YAAA,GAAe,OAAO,EAAe,KAAA;AAChD,EAAM,MAAA,EAAE,MAAS,GAAA,MAAM,IAAI,GAAW,CAAA,CAAA,QAAA,EAAW,EAAE,CAAE,CAAA,CAAA;AACrD,EAAO,OAAA,IAAA;AACT;AAGO,IAAM,YAAY,YAAY;AACnC,EAAA,MAAM,EAAE,IAAK,EAAA,GAAI,MAAM,GAAA,CAAI,IAAa,SAAS,CAAA;AACjD,EAAO,OAAA,IAAA;AACT;AAEa,IAAA,YAAA,GAAe,OAAO,EAAe,KAAA;AAChD,EAAM,MAAA,EAAE,MAAS,GAAA,MAAM,IAAI,GAAW,CAAA,CAAA,QAAA,EAAW,EAAE,CAAE,CAAA,CAAA;AACrD,EAAO,OAAA,IAAA;AACT;AAGO,IAAM,WAAW,YAAY;AAClC,EAAA,MAAM,EAAE,IAAK,EAAA,GAAI,MAAM,GAAA,CAAI,IAAY,QAAQ,CAAA;AAC/C,EAAO,OAAA,IAAA;AACT;AAEa,IAAA,WAAA,GAAc,OAAO,EAAe,KAAA;AAC/C,EAAM,MAAA,EAAE,MAAS,GAAA,MAAM,IAAI,GAAU,CAAA,CAAA,OAAA,EAAU,EAAE,CAAE,CAAA,CAAA;AACnD,EAAO,OAAA,IAAA;AACT","file":"index.js","sourcesContent":["export const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\";\r\n\r\nexport const API_ENDPOINTS = {\r\n  products: `${API_BASE_URL}/products`,\r\n  categories: `${API_BASE_URL}/categories`,\r\n  brands: `${API_BASE_URL}/brands`,\r\n  orders: `${API_BASE_URL}/orders`,\r\n  users: `${API_BASE_URL}/users`,\r\n} as const; ","import axios from \"axios\";\r\nimport { API_BASE_URL } from \"./config\";\r\nimport type { Product, Category, Brand, Order, User } from \"./types\";\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Products\r\nexport const getProducts = async () => {\r\n  const { data } = await api.get<Product[]>(\"/products\");\r\n  return data;\r\n};\r\n\r\nexport const getProductById = async (id: string) => {\r\n  const { data } = await api.get<Product>(`/products/${id}`);\r\n  return data;\r\n};\r\n\r\n// Categories\r\nexport const getCategories = async () => {\r\n  const { data } = await api.get<Category[]>(\"/categories\");\r\n  return data;\r\n};\r\n\r\nexport const getCategoryById = async (id: string) => {\r\n  const { data } = await api.get<Category>(`/categories/${id}`);\r\n  return data;\r\n};\r\n\r\n// Brands\r\nexport const getBrands = async () => {\r\n  const { data } = await api.get<Brand[]>(\"/brands\");\r\n  return data;\r\n};\r\n\r\nexport const getBrandById = async (id: string) => {\r\n  const { data } = await api.get<Brand>(`/brands/${id}`);\r\n  return data;\r\n};\r\n\r\n// Orders\r\nexport const getOrders = async () => {\r\n  const { data } = await api.get<Order[]>(\"/orders\");\r\n  return data;\r\n};\r\n\r\nexport const getOrderById = async (id: string) => {\r\n  const { data } = await api.get<Order>(`/orders/${id}`);\r\n  return data;\r\n};\r\n\r\n// Users\r\nexport const getUsers = async () => {\r\n  const { data } = await api.get<User[]>(\"/users\");\r\n  return data;\r\n};\r\n\r\nexport const getUserById = async (id: string) => {\r\n  const { data } = await api.get<User>(`/users/${id}`);\r\n  return data;\r\n}; "]}